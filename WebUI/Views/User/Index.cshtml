@model List< Application.Features.User.Query.GetAll.UserGetAllDto>

@{
    ViewData["Title"] = "Kullanıcı Listesi";
}

<table class="dTable table table-striped">
     <thead>
          <tr>
               <th>Ad Soyad</th>
               <th>Kullanıcı Adı</th>
               <th>Email</th>
               <th>Kullanıcı Tipi</th>
               <th>Oluşturulma Tarihi</th>
               <th>Oluşturan Kullanıcı</th>
               <th>Güncellenme Tarihi</th>
               <th>Güncelleyen Kullanıcı</th>
               <th></th>
               <th></th>
          </tr>
     </thead>
     <tbody>
        @{
            foreach (var item in Model.OrderByDescending(x => x.Id))
            {
                  <tr>
                       <td>@item.NameSurname</td>
                       <td>@item.Username</td>
                       <td>@item.Email</td>
                       <td>@item.UserType.ToString()</td>
                       <td>@item.CreatedDate.ToString("dd.MM.yyyy HH:mm")</td>
                       <td>@item.CreatedUser</td>
                       <td>@(item.UpdatedDate.HasValue ? item.UpdatedDate.GetValueOrDefault().ToString("dd.MM.yyyy HH:mm") : "")</td>
                       <td>@item.UpdatedUser</td>
                       <td class="align-middle"><a class="h5" href="@Url.Action("Edit", "User", new { id=item.Id})"><i class="fa fa-edit" /></a></td>
                       <td class="align-middle"><a class="h5" href="@Url.Action("Delete", "User", new { id=item.Id})"><i class="fa fa-trash" /></a></td>
                  </tr>
            }
        }
     </tbody>
</table>